pool:
  vmImage: 'ubuntu-latest'

parameters:
- name: environment
  displayName: Environment
  type: string
  default: dev
  values:
  - dev
  - uat
  - prod
- name: sourceRef
  displayName: 'Branch (for dev/uat) or Tag (for prod)'
  type: string
  default: main
- name: awsCredentials
  displayName: 'AWS Service Connection Name'
  type: string
  default: 'YOUR_AWS_SERVICE_CONNECTION_NAME'
- name: awsRegion
  displayName: 'AWS Region'
  type: string
  default: 'us-east-1'
- name: s3LogBucket
  displayName: 'S3 Log Bucket Name'
  type: string
  default: 'your-log-bucket-name'
- name: s3LogPrefix
  displayName: 'S3 Log Prefix (optional)'
  type: string
  default: 'deployment-logs'
- name: prodInstanceIds
  displayName: 'Production EC2 Instance IDs (comma-separated)'
  type: string
  default: 'i-prod-instance1,i-prod-instance2'
- name: uatInstanceIds
  displayName: 'UAT EC2 Instance IDs (comma-separated)'
  type: string
  default: 'i-uat-instance1'
- name: devInstanceIds
  displayName: 'Development EC2 Instance IDs (comma-separated)'
  type: string
  default: 'i-dev-instance1'

stages:
- stage: Deploy
  displayName: Deploy to ${{ parameters.environment }}
  jobs:
  - job: RunDeploymentScript
    displayName: 'Execute Deployment Script on EC2'
    steps:
    - script: echo "Deploying to ${{ parameters.environment }} using ref: ${{ parameters.sourceRef }}"
      displayName: 'Print Deployment Information'

    - task: AWSSystemsManagerRunCommand@1
      name: RunCommand
      displayName: "Perform Deployment on EC2"
      inputs:
        awsCredentials: ${{ parameters.awsCredentials }}
        region: ${{ parameters.awsRegion }}
        documentName: 'AWS-RunShellScript'
        instanceIds: ${{ format(
            '{0}',
            parameters.environment == 'dev' ? parameters.devInstanceIds :
            parameters.environment == 'uat' ? parameters.uatInstanceIds :
            parameters.prodInstanceIds
          ) }}
        comment: 'Running deployment script'
        parameters:
          commands:
          - "/var/snap/amazon-ssm-agent/current/your_deployment_script.sh \"${{ parameters.sourceRef }} ${{ parameters.environment }}\""
          workingDirectory:
          - "/tmp"
        timeoutSeconds: 600

    - task: AWSCLI@1
      displayName: 'Download Deployment Log File'
      inputs:
        awsCredentials: ${{ parameters.awsCredentials }}
        regionName: ${{ parameters.awsRegion }}
        awsCommand: 's3'
        awsSubCommand: 'cp'
        awsCliArguments: 's3://${{ parameters.s3LogBucket }}/${{ parameters.s3LogPrefix }}/${{ parameters.environment }}/deployment.log $(Build.ArtifactStagingDirectory)/deployment.log'
      condition: succeededOrFailed()

    - script: |
        echo "##[section] --- Deployment Logs from EC2 (${{ parameters.environment }}) ---"
        if [ -f "$(Build.ArtifactStagingDirectory)/deployment.log" ]; then
          cat "$(Build.ArtifactStagingDirectory)/deployment.log"
        else
          echo "No deployment log file found."
        fi
      displayName: 'Display Log File Content'
